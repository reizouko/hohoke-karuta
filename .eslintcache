[{"D:\\git\\character-karuta\\src\\App.tsx":"1","D:\\git\\character-karuta\\src\\reportWebVitals.ts":"2"},{"size":5266,"mtime":1609392249223,"results":"3","hashOfConfig":"4"},{"size":425,"mtime":1609232617506,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"16p8jbx",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\character-karuta\\src\\App.tsx",["11"],"import React, { useState } from 'react';\nimport './App.css';\nimport { Box, Button, Card, CardActions, CardContent, Container, CssBaseline, makeStyles, Typography } from '@material-ui/core';\nimport { default as Sound } from 'react-sound';\nimport { default as shuffle } from 'shuffle-array';\n\nconst readingFiles = [\n  \"02_ONE_留守番電話の擬人化キ….wav\",\n  \"03_ONE_発信者番号表示サービ….wav\",\n  \"04_ONE_自動警告録音装置の擬….wav\",\n  \"05_ONE_迷惑電話自動判別装置….wav\",\n  \"06_ONE_名前の由来は「知らな….wav\",\n  \"07_ONE_みかんが大好きな、民….wav\",\n  \"08_ONE_北海道犬から、｜皆《….wav\",\n  \"09_ONE_アナタの食生活をサポ….wav\",\n  \"10_ONE_（わたさぬーにゃ）で….wav\",\n  \"11_ONE_ぺたぺた系クラウドス….wav\",\n  \"12_ONE_銚子ウッド村ファーム….wav\",\n  \"13_ONE_松本市生まれの子供が….wav\",\n  \"14_ONE_松本市生まれのアマガ….wav\",\n  \"15_ONE_松本市生まれのダンス….wav\",\n  \"16_ONE_黒猫の擬人化娘。仲間….wav\",\n  \"17_ONE_かけものつぐみ：掛軸….wav\",\n  \"18_ONE_ひめかきふみか：姫路….wav\",\n  \"19_ONE_ヒツジとウサギのハー….wav\",\n  \"20_ONE_栃木県で活躍する応援….wav\",\n  \"21_ONE_『鬼っ子ハンターつい….wav\",\n  \"22_ONE_ついなちゃんが｜被《….wav\",\n  \"23_ONE_ついなちゃんのお供の….wav\",\n  \"24_ONE_ついなちゃんのお供の….wav\",\n  \"25_ONE_スマートフォンの擬人….wav\",\n];\n\nconst range = (length: number): Array<number> => [...Array(length)].map((_, i) => i);\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    '& > *': {\n      margin: theme.spacing(1),\n      padding: theme.spacing(5)\n    }\n  },\n  cardContent: {\n    textAlign: \"center\"\n  },\n  cardButton: {\n    justifyContent: \"center\"\n  },\n  cards: {\n    fontWeight: \"bold\"\n  }\n}));\n\nexport default () => {\n\n  const [readingStep, setReadingStep] = useState<\"READY\" | \"SENTENCE\" | \"END\">(\"READY\");\n  const [shuffledVoiceIndices, setShuffledVoiceIndices] = useState<Array<number>>([]);\n  const [continuous, setContinuous] = useState(false);\n  const [clickable, setClickable] = useState(true);\n  const [reading, setReading] = useState(false);\n\n  const start = (continuous: boolean): void => {\n    setClickable(false);\n    setContinuous(continuous);\n    if (shuffledVoiceIndices.length === 0) {\n      setShuffledVoiceIndices(shuffle(range(readingFiles.length)));\n    }\n    setReadingStep(\"READY\");\n    setReading(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline/>\n      <div className={classes.paper}>\n        <Typography variant=\"h5\">ほーほけカルタ、読みます。</Typography>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box>\n              <Typography variant=\"h6\">\n                残り <span className={classes.cards}>{shuffledVoiceIndices.length}</span> 枚\n              </Typography>\n            </Box>\n            <Box marginTop={3}>\n              <Typography>\n                絵札を並べてから\n              </Typography>\n              <Typography>\n                ↓\n              </Typography>\n            </Box>\n          </CardContent>\n          <CardActions className={classes.cardButton}>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              start(false);\n            }} disabled={!clickable}>1枚読む</Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => {\n              start(true);\n            }} disabled={!clickable}>全部連続して読む</Button>\n          </CardActions>\n        </Card>\n        <Sound\n          url={`${process.env.PUBLIC_URL}/voice/00_ONE_それじゃあ、いくよー….wav`}\n          playStatus={reading && readingStep === \"READY\" ? \"PLAYING\" : \"STOPPED\"}\n          onFinishedPlaying={() => {\n            setTimeout(() => {\n              setReadingStep(\"SENTENCE\");\n            }, 3000);\n          }}\n        />\n        <Sound\n          url={`${process.env.PUBLIC_URL}/voice/01_ONE_取れたかな？.wav`}\n          playStatus={reading && readingStep === \"END\" ? \"PLAYING\" : \"STOPPED\"}\n          onFinishedPlaying={() => {\n            setReading(false);\n            setShuffledVoiceIndices(shuffledVoiceIndices.slice(1));\n            if (continuous && shuffledVoiceIndices.length > 1) {\n              setTimeout(() => {\n                setReadingStep(\"READY\");\n                setReading(true);\n              }, 3000);\n            } else {\n              setClickable(true);\n            }\n          }}\n        />\n        {\n          readingFiles.map((fileName, index) =>\n            <Sound\n              url={`${process.env.PUBLIC_URL}/voice/${fileName}`}\n              playStatus={reading && readingStep === \"SENTENCE\" && shuffledVoiceIndices[0] === index ? \"PLAYING\" : \"STOPPED\"}\n              onFinishedPlaying={() => {\n                setTimeout(() => {\n                  setReadingStep(\"END\");\n                }, 5000);\n              }}\n            />\n          )\n        }\n      </div>\n    </Container>\n  );\n}\n","D:\\git\\character-karuta\\src\\reportWebVitals.ts",[],{"ruleId":"12","severity":1,"message":"13","line":58,"column":1,"nodeType":"14","endLine":149,"endColumn":2},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]